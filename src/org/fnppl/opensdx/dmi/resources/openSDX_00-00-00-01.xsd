<?xml version="1.0" encoding="UTF-8"?>

<!-- 
/*
 * Copyright (C) 2010-2011 
 * 							fine people e.V. <opensdx@fnppl.org> 
 * 							Henning Thie√ü <ht@fnppl.org>
 * 
 * 							http://fnppl.org
*/

/*
 * Software license
 *
 * For those parts of this file, which are identified as software, rather than documentation, this software-license applies / shall be applied. 
 * 
 * This file is part of openSDX
 * openSDX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * openSDX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * and GNU General Public License along with openSDX.
 * If not, see <http://www.gnu.org/licenses/>.
 *      
 */

/*
 * Documentation license
 * 
 * For those parts of this file, which are identified as documentation, rather than software, this documentation-license applies / shall be applied.
 * 
 * This file is part of openSDX.
 * Permission is granted to copy, distribute and/or modify this document 
 * under the terms of the GNU Free Documentation License, Version 1.3 
 * or any later version published by the Free Software Foundation; 
 * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. 
 * A copy of the license is included in the section entitled "GNU 
 * Free Documentation License" resp. in the file called "FDL.txt".
 * 
 */
 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cc="http://fnppl.org/opensdx/countrycodes" xmlns:g="http://fnppl.org/opensdx/genres" xmlns:l="http://fnppl.org/opensdx/languages">
	<xsd:import namespace="http://fnppl.org/opensdx/countrycodes" schemaLocation="openSDX_countryCodes.xsd"/>
	<xsd:import namespace="http://fnppl.org/opensdx/genres" schemaLocation="openSDX_genres.xsd"/>
	<xsd:import namespace="http://fnppl.org/opensdx/languages" schemaLocation="openSDX_languages.xsd"/>
    <xsd:element name="feed">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">General Element for the whole XML-Doc (root)</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="feedinfo" type="feedinfo"/>
                <xsd:element name="bundle" type="bundle" maxOccurs="unbounded" minOccurs="0"/>
                <xsd:element name="item" type="item" maxOccurs="unbounded" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="feedinfo">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">On feedinfo-level there are the global information needed or 
            at least valuable for ingesting / identifying the content sent.
			It is defined, when the feed was created, when it shall be come effective, who created the feed and 
			who is the receiver of the feed. Also the sender (which can diverge from the creator) is to be stated. 
			The licensor is also to be stated (which in turn can also diverge from the creator and/or the sender).
			There can be "actions" defined on the receiving-party's side which should be "done" when initially 
			receiving this feed, or starting to process the feed for ingestion or finishing the feeds processing. 
			Additionally when everything could be interpreted correctly (in the sense of the receiving party), 
			a "full-success-action" could be issued; likewise if "some error" occurred while processing the feed, 
			an "onerror-action" could be issued.
			Those actions are initially defined to be email-notifications or http-calls; we also included some 
			action to have a "registered letter" and/or "fax" to be sent; wether this is accepted/handled by the 
			receiving party is to be dealt with contractually (we included a field for stating how much the 
			sending party will cover the fee max.).</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="onlytest" type="xsd:boolean" />
            <xsd:element name="feedid" type="xsd:string"/>
            <xsd:element name="creationdatetime" type="datetimeGMT"/>
            <xsd:element name="effectivedatetime" type="datetimeGMT"/>
            <xsd:element name="creator" type="creator"/>
            <xsd:element name="receiver" type="receiver"/>
            <xsd:element name="sender" type="sender"/>
            <xsd:element name="licensor" type="licensor"/>
            <xsd:element name="licensee" type="licensee"/>            
            <xsd:element name="actions" type="actions" maxOccurs="1" minOccurs="0" />
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="bundle">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">On bundle level, there are information on how to handle a collection 
            of "items". This is mainly an album/ep/single. A bundle is identified by one unique identifier, 
            but more unique identifiers could and should be transmitted as well (see below "ids").  
            Most notably on the bundle-level is the "bundle name" which is basically the conjunction of the "name"-
            and the "version"-field. Also to have this easy at hand, there should be the 
            desired "display_artistname"-string be present on this level. 
            Of course, the receiver of the feed can still calculate the "correct" display_artistname 
            by evaluating the contributors (see below) for this.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
        	<xsd:element name="displayname" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        	<xsd:element name="name" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        	<xsd:element name="version" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        	<xsd:element name="display_artistname" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="ids" type="ids" />	
            <xsd:element name="items" type="items" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="contributors" type="contributors" maxOccurs="1" minOccurs="0" />
            <xsd:element name="information" type="information" maxOccurs="1" minOccurs="0" />
            <xsd:element name="license_basis" type="license_basis" maxOccurs="1" minOccurs="0" />
            <xsd:element name="license_specifics" type="license_specifics" maxOccurs="1" minOccurs="0" />
            <xsd:element name="reporting" type="reporting" maxOccurs="1" minOccurs="0" />
            <xsd:element name="tags" type="tags" maxOccurs="1" minOccurs="0" />
            <xsd:element name="files" type="files" maxOccurs="1" minOccurs="0" />
            <xsd:element name="purchase" type="purchase" maxOccurs="1" minOccurs="0" />
        </xsd:all>           	
    </xsd:complexType>
	<xsd:complexType name="contributors">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains a list of contributor.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="contributor" type="contributor" maxOccurs="unbounded" minOccurs="1" />
        </xsd:sequence> 
	</xsd:complexType>
	<xsd:complexType name="contributor">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information of one contributor. 
            A contributor can be a label, performer, texter, editor, conductor, artist, singer,
            composer, mixer, remixer, producer, featuring-Artist, with-Artist, DJ, versus-Artist,
            meets-Artist, presents-Artist, compilator, copyright, production or clearinghouse.
            A Year should be provided in case the type equals copyright or production.</xsd:documentation>
        </xsd:annotation> 
        <xsd:all>
        	<xsd:element name="name" type="xsd:string" />
        	<xsd:element name="type"  type="contributorType" />
        	<xsd:element name="year" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="ids" type="ids" />
            <xsd:element name="www" type="www" maxOccurs="1" minOccurs="0" />
        </xsd:all> 
        <xsd:attribute name="num" type="xsd:integer" />              
	</xsd:complexType>
    <xsd:complexType name="ids">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This Element is a container for all IDs which are available for 
            the associated element.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
        	<xsd:element name="grid" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="upc" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="isrc" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="contentauth" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="labelordernum" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="amzn" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="isbn" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="finetunes" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="licensor" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="licensee" type="xsd:string" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="gvl" type="xsd:string" maxOccurs="1" minOccurs="0" /> 
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="www">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This Element is a container for the important web addresses and 
            phone of the associated element (contributor e.g.). Phone should be in international format.
            Every single information-entry cold be tagged "publishable" which would then mean wether customers 
            of receiver are also allowed to be given this information. If publishable is not given, then this 
            is granted.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
        	<xsd:element name="facebook" type="publishable" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="myspace" type="publishable" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="homepage" type="publishable" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="twitter" type="publishable" maxOccurs="1" minOccurs="0" />
        	<xsd:element name="phone" type="publishable" maxOccurs="1" minOccurs="0" />
        </xsd:all>  
    </xsd:complexType>
	<xsd:complexType name="publishable">
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="publishable" type="xsd:boolean" />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>    
    <xsd:complexType name="items">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element is a container for item-elements.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="item" type="item" maxOccurs="unbounded" minOccurs="1" />
        </xsd:sequence>    
    </xsd:complexType>
    <xsd:complexType name="item">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about a item just like a track. 
            The type describes what the item is e.g. audio, video, android-app et cetera.
            The entry "version" is important if different versions of the bundle exist. The licens_basic and 
            license_specifics contains information and rules about pricing, allowed and 
            disallowed territories, channels an so on. The child "files" hold information for the associated 
            files for this item.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="displayname" type="xsd:string" />
            <xsd:element name="name" type="xsd:string" />
            <xsd:element name="version" type="xsd:string" />
            <xsd:element name="type" type="xsd:string" />
            <xsd:element name="display_artistname" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="ids" type="ids" maxOccurs="1" minOccurs="0" />
            <xsd:element name="contributors" type="contributors" />
            <xsd:element name="information" type="information" />
            <xsd:element name="license_basis" type="license_basis" />
            <xsd:element name="license_specifics" type="license_specifics" />
            <xsd:element name="tags" type="tags" maxOccurs="1" minOccurs="0" />
            <xsd:element name="fingerprint" type="fingerprint" maxOccurs="1" minOccurs="0" />
            <xsd:element name="reporting" type="reporting" maxOccurs="1" minOccurs="0" />
            <xsd:element name="files" type="files" maxOccurs="1" minOccurs="0" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="information">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains important data for an item/file. Multilingual 
            promotexts ans teasertexts, dates of physical and
            digital release, playlength of file, position of the file in relation to other file of bundle, number 
            of set (e.g. 2 for cd 2), the suggested prelistining 
            offset if the file not starts e.g. with significant content, origin country and main language of file 
            and information about related bundles.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="texts" type="texts" maxOccurs="1" minOccurs="0" />
            <xsd:element name="physical_release_datetime" type="datetimeGMT" />
            <xsd:element name="digital_release_datetime" type="datetimeGMT" />
            <xsd:element name="playlength" type="xsd:integer" maxOccurs="1" minOccurs="0" />
            <xsd:element name="num" type="xsd:integer" maxOccurs="1" minOccurs="0" />
            <xsd:element name="setnum" type="xsd:integer" maxOccurs="1" minOccurs="0" />
            <xsd:element name="suggested_prelistening_offset" type="xsd:integer" maxOccurs="1" minOccurs="0" />            
            <xsd:element name="origin_country" type="cc:countryCode" maxOccurs="1" minOccurs="0" />
            <xsd:element name="main_language" type="l:language" maxOccurs="1" minOccurs="0" />
            <xsd:element name="related" type="related" maxOccurs="1" minOccurs="0" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="texts">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains multilingual promotexts ans teasertexts.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="promotext" type="promotext" maxOccurs="unbounded" minOccurs="0" />
            <xsd:element name="teasertext" type="teasertext" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>    
    </xsd:complexType>    
	<xsd:complexType name="promotext">
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="lang" type="xsd:string" />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="teasertext">
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="lang" type="xsd:string" />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="related">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains informations of bundles which are related 
            to the bundle of the actual feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="physical_distributor" type="physical_distributor" maxOccurs="unbounded" minOccurs="0" />
            <xsd:element name="utube" type="utube" maxOccurs="1" minOccurs="0" />
            <xsd:element name="bundle" type="bundle" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence> 	
	</xsd:complexType>
	<xsd:complexType name="physical_distributor">
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="publishable" type="xsd:boolean" />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
    <xsd:complexType name="utube">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">Contains information about youtube url und channel.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
	        <xsd:element name="url" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="channel" type="xsd:string" maxOccurs="1" minOccurs="0" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="fingerprint">
		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element includes an element "echoprint" 
            (http://echoprint.me | https://github.com/echonest/echoprint-codegen).</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="echoprint" type="xsd:string" maxOccurs="1" minOccurs="0" />
        </xsd:sequence>    
    </xsd:complexType>
    <xsd:complexType name="license_basis">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element includes the basic rules and information under which 
            this bundle is provided.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="territorial" type="territorial" maxOccurs="1" minOccurs="0" />
            <xsd:element name="timeframe" type="timeframe" maxOccurs="1" minOccurs="0" />
            <xsd:element name="pricing" type="pricing" maxOccurs="1" minOccurs="0" />
            <xsd:element name="streaming_allowed" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
            <xsd:element name="channels" type="channels" maxOccurs="1" minOccurs="0" />
            <xsd:element name="as_on_bundle" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="channels">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element is a container for channels which can be either "all", 
            "ad supported" or "premium".</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="channel" type="channel" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>    
    </xsd:complexType>
	<xsd:complexType name="channel">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en"> A channels can be either "all", "ad supported" or "premium". 
            The required attribute "type" regards to the allowance in reference to the channel. 
            Type can be "allow" or "disallow".</xsd:documentation>
        </xsd:annotation>	
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="type" type="allowance" use="required"  />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
    <xsd:complexType name="timeframe">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">Timeframe contains the most-recent-release-date from which on 
            receiver may use this and the cancellation-date.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="from" type="datetimeGMT" />
            <xsd:element name="to" type="datetimeGMT" />
        </xsd:sequence>    
    </xsd:complexType>
    <xsd:complexType name="pricing">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">Pricecode is an arbitrary-info. An	explicitly given wholesale-price 
            overrides the basic pricecode-given-wp. Most probably either one of pricecode OR wholesaleprice should be given.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="pricecode" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="wholesale" type="xsd:string" maxOccurs="1" minOccurs="0" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="territorial">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This Element is a container for territories. There should be a entry 
            for all territories with a attribute if distribution is allowed or not.</xsd:documentation>
        </xsd:annotation>         
        <xsd:sequence>
            <xsd:element name="territory" type="territory" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>    	
    </xsd:complexType>
	<xsd:complexType name="territory">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">A territory includes one country code an the required attribute "type". 
            Type can be "allow" or "disallow".</xsd:documentation>
        </xsd:annotation>	
	  <xsd:simpleContent>
	    <xsd:extension base="xsd:string">
	      <xsd:attribute name="type" type="allowance" use="optional"  />
	    </xsd:extension>
	  </xsd:simpleContent>
	</xsd:complexType>
    <xsd:complexType name="license_specifics">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element includes specific rules which should be applied. 
            This can be achieved by given rules.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="rules" type="rules" />
        </xsd:sequence>     
    </xsd:complexType>
    <xsd:complexType name="rules">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element is a container for rules. It needs an ordered mode here -
             first come first match.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="rule" type="rule" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>     
    </xsd:complexType>    
    <xsd:complexType name="rule">
 		<xsd:annotation>
            <xsd:documentation xml:lang="en">A rule must include a "if"-element and a "then"-element to shape a 
            legal instruction. It can also include a "else"-element.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="if" type="if" />
            <xsd:element name="then" type="then" />
            <xsd:element name="else" type="else" maxOccurs="1" minOccurs="0"  />
        </xsd:sequence>
        <xsd:attribute name="num" type="xsd:integer" />     
    </xsd:complexType>
    <xsd:complexType name="if">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element must be the first element in a rule. It includes the 
            information what is affected by the rule, an operator like "equals", "before","after","contains" or 
            "containedin" and a value which will be compared.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="what" type="xsd:string" />
            <xsd:element name="operator" type="operator" />
            <xsd:element name="value" type="xsd:string" />
        </xsd:sequence>   
    </xsd:complexType>    
    <xsd:complexType name="then">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element must be the second in a rule and includes information 
            "echo" for debugging output and can include an element "break" which means to not process any more 
            rules.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="echo" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="break" maxOccurs="1" minOccurs="0" />
        </xsd:sequence>     
    </xsd:complexType>    
    <xsd:complexType name="else">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element is optional. It includes information "proclaim" and can 
            include an element "break" which means to not process any more rules.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="proclaim" type="proclaim" maxOccurs="unbounded" minOccurs="0" />
            <xsd:element name="break" maxOccurs="1" minOccurs="0" />
        </xsd:sequence>     
    </xsd:complexType>
    <xsd:complexType name="proclaim">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element includes the information what is affected and the 
            corresponding value.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="what" type="xsd:string" />
            <xsd:element name="for" type="xsd:string" />
        </xsd:sequence>     
    </xsd:complexType>
    <xsd:complexType name="tags">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about genres and more.</xsd:documentation>
        </xsd:annotation>        
        <xsd:all>
            <xsd:element name="genres" type="genres" maxOccurs="1" minOccurs="0" />
            <xsd:element name="bundle_only" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
            <xsd:element name="explicit_lyrics" type="explicitLyrics" maxOccurs="1" minOccurs="0" />
            <xsd:element name="live" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
            <xsd:element name="accoustic" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
            <xsd:element name="instrumental" type="xsd:boolean" maxOccurs="1" minOccurs="0" />
        </xsd:all>     
    </xsd:complexType>
    <xsd:complexType name="genres">
  		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains a list of genres.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="genre" type="g:genre" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>    
    </xsd:complexType>
    <xsd:complexType name="files">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains a list of files.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="file" type="file" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>     
    </xsd:complexType>    
    <xsd:complexType name="file">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information and location of a file.</xsd:documentation>
        </xsd:annotation>        
        <xsd:all>
            <xsd:element name="location" type="fileLocation" />
            <xsd:element name="type" type="fileType" maxOccurs="1" minOccurs="0" />
            <xsd:element name="filetype" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="samplerate" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="samplesize" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="bitrate" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="bitratetype" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="codec" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="codecsettings" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="bytes" type="xsd:integer" maxOccurs="1" minOccurs="0" />
            <xsd:element name="checksums" type="checksums" />
            <xsd:element name="channels" type="fileChannels" maxOccurs="1" minOccurs="0" />
            <xsd:element name="dimension" type="dimension" maxOccurs="1" minOccurs="0" />
            <xsd:element name="decryptinfo" type="decryptinfo" maxOccurs="1" minOccurs="0" />
        </xsd:all>     
    </xsd:complexType>	
	<xsd:complexType name="checksums">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains checksums for the file.</xsd:documentation>
        </xsd:annotation>        
        <xsd:all>
            <xsd:element name="md5" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="sha1" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="sha256" type="xsd:string"  maxOccurs="1" minOccurs="0" />
        </xsd:all> 	
	</xsd:complexType>
	<xsd:complexType name="dimension">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains entries for width and height of the file.</xsd:documentation>
        </xsd:annotation>        
        <xsd:sequence>
            <xsd:element name="width" type="xsd:integer" />
            <xsd:element name="height" type="xsd:integer" />
        </xsd:sequence> 	
	</xsd:complexType>
    <xsd:complexType name="fileLocation">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains the path to the corresponding file.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="path" type="xsd:string" maxOccurs="1" minOccurs="0" />
            <xsd:element name="http" type="fileHttp" maxOccurs="1" minOccurs="0" />
            <xsd:element name="ftp" type="fileFtp" maxOccurs="1" minOccurs="0" />
        </xsd:all>   
    </xsd:complexType>
    <xsd:complexType name="creator">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains  information about the creator of that feed.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="email" type="email"/>
            <xsd:element name="userid" type="userid" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="keyid" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="receiver">
    <xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains  information about the receiver of that feed.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="type" type="receivertypes"/>
            <xsd:element name="servername" type="iporhostname"/>
            <xsd:element name="serveripv4" type="ipv4"/>
            <xsd:element name="serveripv6" type="ipv6"/>
            <xsd:element name="authtype" type="authtype"/>
            <xsd:element name="username" type="xsd:string"/>
            <xsd:element name="crypto" type="crypto"/>
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="crypto">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains crypto information for secure and authenticated transfer.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="relatedemail" type="email"/>
            <xsd:element name="usedkeyid" type="keyid"/>
            <xsd:element name="usedpubkey" type="xsd:base64Binary"/>
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="sender">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about the sender of that feed.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="contractpartnerid" type="xsd:string"/>
            <xsd:element name="ourcontractpartnerid" type="xsd:string"/>
            <xsd:element name="email" type="email" maxOccurs="1" minOccurs="0" />
			<xsd:element name="keyid" type="xsd:string" maxOccurs="1" minOccurs="0" />            
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="licensor">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about the licensor of that feed.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="contractpartnerid" type="xsd:string"/>
            <xsd:element name="ourcontractpartnerid" type="xsd:string"/>
            <xsd:element name="email" type="email" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="keyid" type="xsd:string" maxOccurs="1" minOccurs="0" />
        </xsd:all>
    </xsd:complexType>    
    <xsd:complexType name="licensee">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about the licensee of that feed.</xsd:documentation> 
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="contractpartnerid" type="xsd:string"/>
            <xsd:element name="ourcontractpartnerid" type="xsd:string"/>
            <xsd:element name="email" type="email" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="keyid" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="actions">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about possible actions with the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="oninitialreceive" type="event"/>
            <xsd:element name="onprocesstart" type="event"/>
            <xsd:element name="onprocesend" type="event"/>
            <xsd:element name="onfullsuccess" type="event"/>
            <xsd:element name="onerror" type="event"/>
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="oninitialreceive">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about what should be done on initial
             receive of the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="event"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="onprocesstart">
   	 	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about what should be done on the 
            start of processing the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="event"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="onprocessend">
   		<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about what should be done on the 
            end of processing the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="event"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="onfullsuccess">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about what should be done on full 
            success processing the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="event"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="onerror">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about what should be done on error 
            processing the feed.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="event"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="event">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about possible events and actions.</xsd:documentation>
        </xsd:annotation>    
        <xsd:sequence>
            <xsd:element name="mailto" type="mailto" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="http" type="http" minOccurs="0" maxOccurs="unbounded"/>            
            <xsd:element name="fax" type="fax" minOccurs="0" maxOccurs="unbounded"/>            
            <xsd:element name="letter" type="letter" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="mailto">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about mailto-event.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="action">
                <xsd:sequence>
                    <xsd:element name="receiver" type="emaillist" minOccurs="1" maxOccurs="unbounded" />
                    <xsd:element name="subject" type="xsd:string"/>
                    <xsd:element name="text" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="http">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about http-event.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="action">
                <xsd:all>
                    <xsd:element name="url" type="url"/>
                    <xsd:element name="type" type="httpmethods"/>
                    <xsd:element name="addheader" type="http_addheader"/>
                    <xsd:element name="addparams" type="http_addparams"/>
                </xsd:all>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="fileHttp">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about http access to file.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="action">
                <xsd:all>
                    <xsd:element name="url" type="url"/>
                    <xsd:element name="user" type="xsd:string" maxOccurs="1" minOccurs="0" />
                    <xsd:element name="pass" type="xsd:string" maxOccurs="1" minOccurs="0" />
                    <xsd:element name="expiresdatetime" type="datetimeGMT"/>
                </xsd:all>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="fileFtp">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about ftp access to file.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="action">
                <xsd:all>
                    <xsd:element name="server" type="xsd:string"/>
                    <xsd:element name="port" type="xsd:string"/>
                    <xsd:element name="path" type="xsd:string"/>
                    <xsd:element name="user" type="xsd:string" maxOccurs="1" minOccurs="0" />
                    <xsd:element name="pass" type="xsd:string" maxOccurs="1" minOccurs="0" />
                    <xsd:element name="expiresdatetime" type="datetimeGMT"/>
                </xsd:all>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>    
    <xsd:complexType name="http_addheader">
        <xsd:complexContent mixed="false">
            <xsd:extension base="action_instruction">
                <xsd:sequence>
                    <xsd:any processContents="lax" maxOccurs="unbounded"/>    
                </xsd:sequence>                
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="http_addparams">
        <xsd:complexContent>
            <xsd:extension base="action_instruction">
                <xsd:sequence>
                    <xsd:any processContents="lax" maxOccurs="unbounded"/>    
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="fax">
        <xsd:complexContent>
            <xsd:extension base="action">
                <xsd:sequence>
                    <xsd:any processContents="lax" maxOccurs="unbounded"/>    
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="letter">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about the letter event.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="registered" type="xsd:boolean" />
            <xsd:element name="to" type="to"/>            
            <xsd:element name="text" type="xsd:string" />            
            <xsd:element name="costscoveredby" type="costscoveredby"/>   
        </xsd:all>
    </xsd:complexType>
    <xsd:complexType name="to">
     	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about recipient.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="name" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="department" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="nameperson" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="street" type="xsd:string" />
            <xsd:element name="postcode" type="xsd:string" />
            <xsd:element name="country" type="xsd:string" />
            <xsd:element name="additionaladdressinfo" type="xsd:string" minOccurs="0" maxOccurs="1" />  
        </xsd:all>   	
    </xsd:complexType>
    <xsd:complexType name="costscoveredby">
     	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about who covered the costs of event.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="contractpartnerid" type="xsd:string" />
            <xsd:element name="ourcontractpartnerid" type="xsd:string" />
            <xsd:element name="maxcostscovered" type="xsd:string" minOccurs="0" maxOccurs="1"/>
        </xsd:all>     
    </xsd:complexType>
    <xsd:complexType name="purchase">
     	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about purchase. Mostly when this 
            feeds recipient is a POS.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="pos" type="xsd:string" />
            <xsd:element name="url" type="xsd:string" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="reporting">
      	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about reporting.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="realtime" type="realtime" />
            <xsd:element name="postponed" type="postponed" />
        </xsd:all>     
    </xsd:complexType>    
    <xsd:complexType name="realtime">
       	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains http information for realtime reporting.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="http" type="http" />
        </xsd:sequence>    
    </xsd:complexType>
    <xsd:complexType name="postponed">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains some info on reporting when doing the "usual" 
            time-gap-reporting.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="id" type="xsd:string" />
        </xsd:sequence>    
    </xsd:complexType>        
    <xsd:complexType name="decryptinfo">
    	<xsd:annotation>
            <xsd:documentation xml:lang="en">This element contains information about decryption of corresponding 
            file.</xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="cipher" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="initvector" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="key" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="bytes" type="xsd:string" minOccurs="0" maxOccurs="1" />
            <xsd:element name="checksums" type="checksums" minOccurs="0" maxOccurs="1" />
        </xsd:all>    
    </xsd:complexType>
    <xsd:complexType name="action"/>
    <xsd:complexType name="action_instruction"/>
    <xsd:simpleType name="email">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:simpleType name="emaillist">
        <xsd:restriction base="xsd:string"/>
        <!-- make to NMTOKENS or such... -->
    </xsd:simpleType>
    <xsd:simpleType name="userid">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>

    <xsd:simpleType name="datetimeGMT">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} GMT\+\d{2}:\d{2}"/>
            <!-- "2010-01-31 00:00:00 GMT+00:00" - should be altered to some NMTOKENS or such ... -->
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="receivertypes">    
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ftp"/>
            <xsd:enumeration value="ftps"/>
            <xsd:enumeration value="sftp"/>
            <xsd:enumeration value="webdav"/>
            <xsd:enumeration value="openSDX fileserver"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="httpmethods">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="GET"/>
            <xsd:enumeration value="POST"/>
            <xsd:enumeration value="HEAD"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="iporhostname">
        <xsd:restriction base="xsd:string"> </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="keyid">
        <xsd:restriction base="xsd:string"> </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="ipv4">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="\d{3}\.\d{3}\.\d{3}\.\d{3}"/>
            <!-- should be checked for 0-255 etc. -->
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="ipv6">
        <xsd:restriction base="xsd:string">
            <!-- not pattern defined yet... --> </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="url">
        <xsd:restriction base="xsd:string">
            <!-- not pattern defined yet... --> </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="authtype">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="login"/>
            <xsd:enumeration value="keyfile"/>
            <xsd:enumeration value="kerberos"/>
            <xsd:enumeration value="keyfile+login"/>
            <xsd:enumeration value="keyfile+username"/>
        </xsd:restriction>
    </xsd:simpleType>
  	<xsd:simpleType name="contributorType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="label"/>
          <xsd:enumeration value="performer"/>
          <xsd:enumeration value="texter"/>
          <xsd:enumeration value="editor"/>
          <xsd:enumeration value="conductor"/>
          <xsd:enumeration value="artist"/>
          <xsd:enumeration value="singer"/>
          <xsd:enumeration value="composer"/>
          <xsd:enumeration value="mixer"/>
          <xsd:enumeration value="remixer"/>
          <xsd:enumeration value="producer"/>
          <xsd:enumeration value="featuring"/>
          <xsd:enumeration value="with"/>
          <xsd:enumeration value="DJ"/>
          <xsd:enumeration value="versus"/>
          <xsd:enumeration value="meets"/>
          <xsd:enumeration value="presents"/>
          <xsd:enumeration value="compilator"/>
          <xsd:enumeration value="copyright"/>
          <xsd:enumeration value="production"/>
          <xsd:enumeration value="publisher"/>
          <xsd:enumeration value="clearinghouse"/>
         </xsd:restriction>
  	</xsd:simpleType> 
  	<xsd:simpleType name="operator">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="equals"/>
          <xsd:enumeration value="before"/>
          <xsd:enumeration value="after"/>
          <xsd:enumeration value="contains"/>
          <xsd:enumeration value="containedin"/>
        </xsd:restriction>
  	</xsd:simpleType>  	 
  	<xsd:simpleType name="allowance">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="allow"/>
          <xsd:enumeration value="disallow"/>
        </xsd:restriction>
  	</xsd:simpleType>
  	<xsd:simpleType name="explicitLyrics">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
          <xsd:enumeration value="cleaned"/>
        </xsd:restriction>
  	</xsd:simpleType>  	
  	<xsd:simpleType name="fileType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="full"/>
          <xsd:enumeration value="prelistening"/>
		  <xsd:enumeration value="frontcover"/>
		  <xsd:enumeration value="backcover"/>
          <xsd:enumeration value="booklet"/>
        </xsd:restriction>
  	</xsd:simpleType>
  	<xsd:simpleType name="fileChannels">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="mono"/>
          <xsd:enumeration value="stereo"/>
          <xsd:enumeration value="joint-stereo"/>
          <xsd:enumeration value="5.1"/>
        </xsd:restriction>
  	</xsd:simpleType> 
</xsd:schema>
