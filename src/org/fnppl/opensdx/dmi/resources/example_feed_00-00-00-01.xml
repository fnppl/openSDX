<?xml version="1.0" encoding="UTF-8"?>

<!-- 
/*
 * Copyright (C) 2010-2011 
 * 							fine people e.V. <opensdx@fnppl.org> 
 * 							Henning Thieß <ht@fnppl.org>
 * 
 * 							http://fnppl.org
*/

/*
 * Software license
 *
 * For those parts of this file, which are identified as software, rather than documentation, this software-license applies / shall be applied. 
 * 
 * This file is part of openSDX
 * openSDX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * openSDX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * and GNU General Public License along with openSDX.
 * If not, see <http://www.gnu.org/licenses/>.
 *      
 */

/*
 * Documentation license
 * 
 * For those parts of this file, which are identified as documentation, rather than software, this documentation-license applies / shall be applied.
 * 
 * This file is part of openSDX.
 * Permission is granted to copy, distribute and/or modify this document 
 * under the terms of the GNU Free Documentation License, Version 1.3 
 * or any later version published by the Free Software Foundation; 
 * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. 
 * A copy of the license is included in the section entitled "GNU 
 * Free Documentation License" resp. in the file called "FDL.txt".
 * 
 */
 -->


<!-- 
	basically a feed could contain as many products as wanted; 
	they all should be from one direct licensor though
	
	a feed-xml should be sent AFTER all referenced audio/cover/whatever-files are sent
	
	after the feed-xml is sent, a feed-finish-marker should be sent. the content of the feed-finish-marker should be 0bytes long
	the feed-finish-marker is the trigger for some automation on the reveiving-parties-side

	this whole format is NOT STRICT. furthermore it is meant to be dynamically as it can be. of course, there MUST be some basics given.
	the receiving party SHOULD then give a report in the desired-action-calls which information, it just *ignored*
	the receiving party MUST follow the basics.
	
	the term "our" and "your" is always from the standpoint of the document-sending party.
	
	
	HT 20110214
	from my point of view, a *feed* with only one product is much more desirable in terms of error-isolation/correction
	in these days, it should never be a problem to have computers work on this in a proper manner 
 -->

<feed xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	xsi:noNamespaceSchemaLocation="openSDX_00-00-00-01.xsd">
	<feedinfo>
		<onlytest>true</onlytest><!-- MUST testmode true|false -->
		<feedid>kaakka</feedid><!-- MUST id is provided by sender; should be unique -->
		<creationdatetime>2010-10-01 00:00:00 GMT+00:00</creationdatetime><!-- MUST datetime of creation of this feed -->
		<effectivedatetime>2010-10-01 00:00:00 GMT+00:00</effectivedatetime><!-- MUST ; most probably the same as creationdate ; datetime when this feed may be come ACTIVE as earliest; mainly used for deferred update-feeds with an effective-date not *asap* -->
		<creator>
			<email>user@sendingparty.nät</email><!-- should be an email-address of the *user* on the sending side -->
			<userid>1919kdkdk12929</userid><!-- should be an unique id of the *user* on the sending side-->
			<keyid>44:BC:2C:A0:A1:70:FD:5A:CD:9F:C3:EA:44:FB:E0:A6:5C:EA:8B:86@keyserver.fnppl.org</keyid>
		</creator><!-- creator is a mere info-field for the sending-party ; receiving party may totally feel free to ignore this -->

		<receiver>
			<type>ftp</type><!-- openSDX fileserver|ftp|sftp|ftps|webdav| -->
			<servername>myftpserver.org</servername><!-- MUST provider should really give hostname instead of ip ; if hostname is given as ip, then put that one here -->
			<serveripv4>000.000.000.000</serveripv4><!-- MUST resolved servername ipv4 -->
			<serveripv6></serveripv6><!-- COULD resolved servername ipv6 -->
			<authtype>login</authtype><!-- MUST login|keyfile|token|other -->
			<username>testuser</username><!-- MUST for authtype login or keyfile -->
			<crypto>
				<relatedemail></relatedemail><!-- SHOULD -->
				<usedkeyid></usedkeyid><!-- COULD ; keyid on gpgkesyerver -->
				<usedpubkey></usedpubkey><!-- SHOULD ; ascii-armored / base64-form ; either this or keyid must be given -->
			</crypto><!-- COULD -->					
		</receiver>
		<sender>
			<contractpartnerid>id</contractpartnerid><!-- MUST your side of "ID" ; worst case: the sending-company's correct trade-register-name/number -->
			<ourcontractpartnerid>id</ourcontractpartnerid><!-- MUST our side of "ID" -->
			<email>sender@fnppl.org</email><!-- MUST esp. for signature-check ; could of course be a generic account e.g. deliveryteam@dsphouse.nät -->		
			<keyid>66:BC:2C:A0:A1:70:FD:5A:CD:9F:C3:EA:44:FB:E0:A6:5C:EA:8B:86@keyserver.fnppl.org</keyid>
		</sender><!-- MUST -->
		<licensor>
			<contractpartnerid>id</contractpartnerid><!-- MUST your side of "ID" ; worst case: the license-giving-company's correct trade-register-name/number -->
			<ourcontractpartnerid>id</ourcontractpartnerid><!-- MUST our side of "ID" -->
			<email>licensor@fnppl.org</email><!-- SHOULD good, but not neccessarily needed -->
			<keyid>88:BC:2C:A0:A1:70:FD:5A:CD:9F:C3:EA:44:FB:E0:A6:5C:EA:8B:86@keyserver.fnppl.org</keyid>
		</licensor><!-- MUST could be identical to sender, but has to be given -->
		<licensee>
			<contractpartnerid>id</contractpartnerid><!-- MUST your side of "ID" ; worst case: the license-giving-company's correct trade-register-name/number -->
			<ourcontractpartnerid>id</ourcontractpartnerid><!-- MUST our side of "ID" -->
			<email>licensee@fnppl.org</email><!-- SHOULD good, but not neccessarily needed -->
			<keyid>AA:BC:2C:A0:A1:70:FD:5A:CD:9F:C3:EA:44:FB:E0:A6:5C:EA:8B:86@keyserver.fnppl.org</keyid>
		</licensee><!-- MUST could be identical to sender, but has to be given -->
		<actions>
			<oninitialreceive>
				<mailto>
					<receiver>lala@nowhere.nät, lala1@nowhere.nät</receiver><!-- MUST -->
					<receiver>lala@nowhere.nät, lala1@nowhere.nät</receiver><!-- COULD have multiple receivers -->
					<subject>feed received</subject><!-- SHOULD this should be added to (an possibly empty) the emails subject ; SHOULD not be more than 200 7-byte-chars-->
					<text>yes, i got the feed</text><!-- SHOULD this should be added to (an possibly empty) the emails text ; SHOULD not be more than 4048 7-byte-chars-->
				</mailto>
				<http>
					<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
					<type>GET</type><!-- GET|POST|HEAD ; most probably GET -->
					<addheader>
						<header>
							<name>gumpy</name>
							<value>RWJ</value>
						</header>
					</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
					<addparams>
						<param>
							<name>cmd</name>
							<value>ehlo</value>
						</param>
						<param>
							<name>jump</name>
							<value>neverfrombridgbe</value>
						</param>
					</addparams>
				</http>
				<http>
					<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
					<type>POST</type><!-- GET|POST|HEAD ; most probably GET ; in case of POST, there SHOULD no (GET)params included in url-call ; so, this example shows *bad* stuff -->
					<addheader>
						<header>
							<name>gumpy</name>
							<value>RWJ</value>
						</header>
					</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
					<addparams>
						<param>
							<name>cmd</name>
							<value>ehlo</value>
						</param>
						<param>
							<name>jump</name>
							<value>neverfrombridgbe</value>
						</param>
					</addparams>
				</http>
			</oninitialreceive><!-- SHOULD when the *machine* picks up this delivery (aka pulls it away from *inbox*) -->
			<onprocesstart></onprocesstart><!-- SHOULD when the *machine* start processing this feed -->
			<onprocesend></onprocesend><!-- SHOULD when *machine* has ended working on this -->
			<onfullsuccess>
				<fax>
					<number>+44 77 919191919</number>
					<to>
						<name>yeah company ltd.</name>
						<department>it crowd</department><!-- resolves to: dep. *department* -->
						<nameperson>jonathan jones</nameperson><!-- resolves to: Attn. *nameperson* -->
						<street>main street 1010</street>
						<postcode>112233</postcode>
						<country>DK</country><!-- ISO -->
						<additionaladdressinfo>Building 7</additionaladdressinfo>
					</to>
					<text></text><!-- text which MUST be on that fax -->
					<costscoveredby>
						<contractpartnerid></contractpartnerid><!-- MUST contractpartnerid on your side ; see above -->
						<ourcontractpartnerid></ourcontractpartnerid><!-- MUST contractpartnerid on our side ; see above -->					
						<maxcostscovered>EUR 0.77</maxcostscovered>
					</costscoveredby>
				</fax><!-- would be total awesome, if someone would provide even *non*-digital reports; of course this costs money ; receving party can decide to ignore this -->
				
				<letter>
					<registered>true</registered><!-- MUST true|false ; must be registered letter yes/no -->
					<to>
						<name>yeah company ltd.</name>
						<department>it crowd</department><!-- resolves to: dep. *department* -->
						<nameperson>jonathan jones</nameperson><!-- resolves to: Attn. *nameperson* -->
						<street>main street 1010</street>
						<postcode>112233</postcode>
						<country>DK</country><!-- ISO -->
						<additionaladdressinfo>Building 7</additionaladdressinfo>
					</to>
					<text></text><!-- text which MUST be on that letter -->
					<costscoveredby>
						<contractpartnerid></contractpartnerid><!-- MUST contractpartnerid on your side ; see above -->
						<ourcontractpartnerid></ourcontractpartnerid><!-- MUST contractpartnerid on our side ; see above -->					
						<maxcostscovered>EUR 0.77</maxcostscovered>
					</costscoveredby>
				</letter><!-- would be total awesome, if someone would provide even *non*-digital reports; of course this costs money ; receving party can decide to ignore this -->			
			</onfullsuccess><!-- SHOULD when *machine* thinks, everything was read and successfully process - without ANY error -->
			<onerror></onerror><!-- SHOULD when *machine* could process this, but some error, or total fail occured -->
		</actions><!-- SHOULD - hopefully the receiving party also respects this ; this would ease a lot in the chain... -->
	</feedinfo>
	
	<bundle>
		<ids>
			<grid></grid><!-- COULD grid -->
			<upc></upc><!-- SHOULD ean/upc -->
			<isrc></isrc><!-- SHOULD isrc - not applicable on bundle-level, but for  -->
			<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->
			<labelordernum></labelordernum><!-- COULD -->
			<amzn></amzn><!-- COULD ; amazon-id-stuff -->
			<isbn></isbn><!-- COULD -->
			<finetunes></finetunes><!-- COULD -->
			<licensor>ourid</licensor><!-- COULD -->
			<licensee></licensee><!-- COULD -->
		</ids><!-- MUST -->
		<displayname></displayname><!-- MUST this is how this should be displayed in pos -->
		<name></name><!-- MUST name - should be without "version" or stuff could be totally same as in displayname -->
		<version></version><!-- MUST version if different versions of this bundle exist - can be empty -->
		<display_artistname></display_artistname><!-- SHOULD ; convenience-info receiver can decide to ignore this and to create from the give contributors -->	
		<contributors>
			<contributor num="1">
				<name></name><!-- MUST could be labelname -->
				<type>label</type><!-- MUST e.g. label|composer|texter|writer|conductor -->
				<year></year><!-- SHOULD for copyright/production -->
				<ids>
					<gvl></gvl><!-- gvl -->
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/sender/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->
				</ids><!-- MUST -->
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
				</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->
			</contributor><!-- MUST -->
			<contributor num="2">
				<name></name><!-- could be artistname -->
				<type>display_artist</type><!-- e.g. display_artist -->
				<year></year><!-- SHOULD for copyright/production -->
				<ids>
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->					
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->
				</ids>
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
				</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
			</contributor>
			<contributor num="3">
				<name></name><!-- could be compilator -->
				<type>compilator</type><!-- e.g. compilator -->
				<year></year><!-- SHOULD for copyright/production -->
				<ids>
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->					
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->
				</ids>
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
				</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
			</contributor>
			<contributor num="4">
				<name></name><!-- could be compilator -->
				<type>vocals</type><!-- e.g. vocals -->
				<year></year><!-- SHOULD for copyright/production -->
				<ids>
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->					
				</ids>
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
			</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
			</contributor>
			<contributor num="5">
				<name></name><!-- could be compilator -->
				<type>copyright</type><!-- e.g. vocals -->
				<year>2005</year><!-- SHOULD for copyright/production -->
				<ids>
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->					
				</ids>
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
			</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
			</contributor>	
			<contributor num="6">
				<name></name><!-- could be compilator -->
				<type>production</type><!-- e.g. vocals -->
				<year>2004</year><!-- SHOULD for copyright/production -->
				<ids>
					<finetunes></finetunes><!-- finetunes-strange-id -->
					<licensor></licensor><!-- must be unique for that contributor/licensor -->
					<licensee></licensee><!-- if given some kind of "your" id: thats it -->
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->					
				</ids>
				<www>
					<facebook></facebook>
					<myspace></myspace>
					<homepage></homepage>
					<twitter></twitter>
					<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
			</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
			</contributor>					
			<!-- HT 14.02.2011 - could also have some "restrictions/conditions" on it - e.g. when an artist is different for some territory or such... -->
		</contributors><!-- MUST the contributors are ordered from 1 to n - most significant ones (per type) are the ones with the smalles n -->
		
		<information>
			<promotext lang="en">
			EN asdasd
			</promotext>
			<promotext lang="de">
			DE asdasd
			</promotext>
			<teasertext lang="de">
			DE asdasd
			</teasertext>
			
			<physical_release_datetime>1960-02-13 00:00:00 GMT+00:00</physical_release_datetime>
			<digital_release_datetime>1960-02-13 00:00:00 GMT+00:00</digital_release_datetime>
			<playlength>510</playlength>
        	<origin_country>DE</origin_country>
        	<main_language>de</main_language>
        	
			<related>
				<physical_distributor></physical_distributor><!-- COULD (one of) the physical distributors  -->
				<physical_distributor publishable="false"></physical_distributor><!-- COULD (one of) the physical distributors  -->
				<utube>
					<url></url>
					<channel></channel>
				</utube>
				<bundle>
					<ids>
						<upc></upc>
						<amzn></amzn>
						<isbn></isbn>
					</ids>
					<purchase>
						<pos>itms</pos>
						<url>http://itms/ajsjasj</url>
					</purchase><!-- COULD ; most probably not, when this feeds recipient is a POS -->
				</bundle>
				<bundle>
					<ids>
						<upc></upc>
						<amzn></amzn>
						<isbn></isbn>
					</ids>
				</bundle>
			</related><!-- SHOULD ; if available any other forms of this product (versions, cover, tracks included in mix etc.) -->
		</information>
		
		<license_basis>
			<territorial>
				<territory type="allow">GB</territory><!-- type explicitly given -->
				<territory type="disallow">US</territory><!-- for use for eg. WW -AT -->
				<territory></territory><!-- type omitted: allow -->
				<!-- U more territories -->
			</territorial>
			<timeframe>
				<from>1960-02-13 00:00:00 GMT+01:00</from><!-- MUST ; most-recent-release-date from which on receiver may use this -->
				<to>2050-02-13 23:59:59 GMT+01:00</to><!-- MUST ; cancellation-date -->
			</timeframe>
						
			<pricing>
				<pricecode>MEDIUM</pricecode><!-- COULD ; arbitrary-info ; mainly agreed in  -->
				<wholesale>EUR 9.99</wholesale><!-- COULD ; an explicitly given wholesale-price overrides the basic pricecode-given-wp ; most probably either one of pricecode OR wholesaleprice should be given -->
			</pricing>
			<streaming_allowed>true</streaming_allowed>
	        <channels>
	          <channel type="allow">ad supported</channel>  <!-- all | ad supported | premium -->
	        </channels>
		</license_basis><!-- these are the basic rules under which this bundle is provided to u (of course on basis of those agreed on in the contracting phase) -->
		
		
		<license_specifics>
			<!-- all territories here MUST be given in *basis* -->
			<!-- all times here MUST be included in the basis-timeframe -->
			<!-- HT 14.02.2011 - using some *basic-if-then-else*-style here because of clarity and easy implemenation-possibility -->
			<rules>
				<rule num="1"><!-- HT 14.02.2011 yeah, starting at #1 ;-) -->
					<if>
						<what>territory</what>
						<operator>containedin</operator><!-- equals/before/after/contains/containedin -->
						<value>EU</value>
					</if>
					<then>
						<echo>me is debugging output for happy programmers...</echo><!-- HT 14.02.2011 - much appreciated... -->
						<break /><!-- this means to not process any more rules...; just leave it away to "continue" -->
					</then>
					<else><!-- HT 14.02.2011 we should not cascade this now..., but could easily do -->
						<proclaim>
							<what>price</what>
							<for>EUR 9.99</for>
						</proclaim>
						<proclaim>
							<what>pricelevel</what>
							<for>medium</for>
						</proclaim>
						<break />
					</else>
				</rule><!-- numbered since we need an ordered mode here - first come first match -->
				
				<rule num="2"><!-- HT 14.02.2011 yeah, starting at #1 ;-) -->
					<if>
						<what>territory</what><!-- *field* -->
						<operator>equals</operator><!-- equals/before/after/contains/containedin -->
						<value>DE</value>
					</if>
					<then>
						<echo>YOU CANNOT EVEN REACH ME - since RULE1 breaks and DE is in EU</echo>					
					</then>				
				</rule>
			</rules>
		</license_specifics><!-- MUST ; if no specific rules should be applied: empty node -->
		
		<reporting>
			<realtime>
				<http>
					<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
					<type>GET</type><!-- GET|POST|HEAD ; most probably GET -->
					<addheader>
						<header>
							<name>gumpy</name>
							<value>RWJ</value>
						</header>
					</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
					<addparams>
						<param>
							<name>cmd</name>
							<value>ehlo</value>
						</param>
						<param>
							<name>jump</name>
							<value>neverfrombridgbe</value>
						</param>
					</addparams>
				</http>
			</realtime>
			<postponed>
				<id>some-reporting-id-whatever</id>
			</postponed><!-- Some info on reporting when doing the "usual" time-gap-reporting -->
		</reporting><!-- COULD -->
		
		<tags>
			<genres>
				<genre></genre>
				<genre></genre>
			</genres>
			<bundle_only>false</bundle_only> <!--  true|false -->
			<explicit_lyrics>cleaned</explicit_lyrics> <!--  true|false|cleaned -->
			<live>false</live> <!--  true|false -->
			<accoustic>false</accoustic> <!--  true|false -->
			<instrumental>false</instrumental> <!--  true|false -->
		</tags><!-- SHOULD -->
				
		<items> <!-- those items aka tracks/videos/flash/apps/whatever contained in this bundle -->
			<item>
				<displayname></displayname><!-- MUST this is how this should be displayed in pos -->
				<name></name><!-- MUST name - should be without "version" or stuff could be totally same as in displayname -->
				<version></version><!-- MUST version if different versions of this bundle exist - can be empty -->
				<type>audio</type><!-- MUST ; audio, video, android-app, win32-program, whatever -->
				<display_artistname>Artist</display_artistname>
				<ids>
					<grid></grid><!-- COULD grid -->
					<isrc></isrc><!-- SHOULD isrc - not applicable on bundle-level, but for -->
					<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com -->
					<finetunes></finetunes><!-- strange finetunes id -->
				</ids><!-- MUST -->
				<fingerprint>
					<echoprint></echoprint><!-- see http://echoprint.me | https://github.com/echonest/echoprint-codegen -->
				</fingerprint><!-- COULD -->
				<contributors>
					<contributor num="1">
						<name></name><!-- could be artistname -->
						<type>display_artist</type><!-- e.g. display_artist -->
						<year></year><!-- SHOULD for copyright/production -->
						<ids>
							<finetunes></finetunes><!-- finetunes-strange-id -->
							<licensor></licensor><!-- must be unique for that contributor/licensor -->
							<licensee></licensee><!-- if given some kind of "your" id: thats it -->					
							<contentauth></contentauth><!-- SHOULD content-authority-id - https://contentauthority.com  -->
						</ids>
						<www>
							<facebook></facebook>
							<myspace></myspace>
							<homepage></homepage>
							<twitter></twitter>
							<phone publishable="false">+49 44 9191919</phone><!-- COULD international format -->
						</www><!-- SHOULD further information on this ; every single information-entry cold be tagged *publishable* which would then mean wether customers of receiver are also allowed to be given this information ; if publishable is not given, then this is granted -->				
					</contributor>
					<!-- HT 14.02.2011 - could also have some "restrictions/conditions" on it - e.g. when an artist is different for some territory or such... -->
				</contributors><!-- MUST the contributors are ordered from 1 to n - most significant ones (per type) are the ones with the smalles n -->
		
				<information>
					<promotext lang="en">
					EN asdasd
					</promotext>
					<promotext lang="de">
					DE asdasd
					</promotext>
					<teasertext lang="de">
					DE asdasd
					</teasertext>
			
					<physical_release_datetime>1960-02-13 00:00:00 GMT+00:00</physical_release_datetime>
					<digital_release_datetime>1960-02-13 00:00:00 GMT+00:00</digital_release_datetime>
			
					<playlength>185</playlength><!-- MUST ; in seconds ; at least for media-files -->
					<num>1</num><!-- SHOULD ; e.g. tracknumber -->
					<setnum>1</setnum><!-- SHOULD; e.g. number of cd -->
					<suggested_prelistening_offset>90</suggested_prelistening_offset><!-- COULD ; in seconds ; for a nice prelistining -->
		            <origin_country>DE</origin_country>
		            <main_language>de</main_language>
					<related>					
						<utube>
							<url></url>
							<channel></channel>
						</utube>
					</related><!-- SHOULD ; if available any other forms of this product (versions, cover, tracks included in mix etc.) -->
				</information>

				<license_basis>
					<as_on_bundle>true</as_on_bundle><!-- COULD ; if as_on_bundle 'true', this means to take the enclosing bundle's license-basis ; could also be omitted ; could otherwise be the same rules as above -->
					<pricing>
						<pricecode>LOW</pricecode><!-- COULD ; arbitrary-info ; mainly agreed in  -->
						<wholesale>EUR 0.99</wholesale><!-- COULD ; an explicitly given wholesale-price overrides the basic pricecode-given-wp ; most probably either one of pricecode OR wholesaleprice should be given -->
					</pricing><!--  given the "as_on_bunlde"-tag, but giving also tags here would override those in effect ... - should also check for "nullable" -->
				</license_basis>
				<license_specifics>
					<rules /><!-- MUST ; no rules -> empty -->
				</license_specifics>

				<tags>
					<genres>
						<genre></genre>
						<genre></genre>
					</genres>
					<bundle_only>false</bundle_only>
					<explicit_lyrics>false</explicit_lyrics>
					<live>false</live>
					<accoustic>false</accoustic>
					<instrumental>false</instrumental>
				</tags>
				
				<reporting>
					<realtime>
						<http>
							<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
							<type>GET</type><!-- GET|POST|HEAD ; most probably GET -->
							<addheader>
								<header>
									<name>gumpy</name>
									<value>RWJ</value>
								</header>
							</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
							<addparams>
								<param>
									<name>cmd</name>
									<value>ehlo</value>
								</param>
								<param>
									<name>jump</name>
									<value>neverfrombridgbe</value>
								</param>
							</addparams>
						</http>
					</realtime>
					<postponed>
						<id>some-reporting-id-whatever</id>
					</postponed><!-- Some info on reporting when doing the "usual" time-gap-reporting -->
				</reporting><!-- COULD -->
				
				<files>
					<file>
						<type>full</type><!-- MUST ; full|prelistening -->
						<filetype>MPEG-1 Audio Layer III</filetype><!-- MUST ; should accept "MP3" also as "MPEG-1 Audio Layer III" -->
						<samplerate>44100</samplerate><!-- in khz -->
						<samplesize>24</samplesize><!-- in bit -->
						<bitrate>320</bitrate><!-- in kilobitpersecond e.g. 256 (on VBR) or 96/320 on (MBR) -->
						<bitratetype>cbr</bitratetype><!-- type-info such as CBR/VBR/MBR -->
						<codec>lame</codec>
						<codecsettings>insane</codecsettings><!--  some arbitrary info - such as "insane" or "quality=9" -->
						
						<channels>stereo</channels><!-- MUST ; mono, stereo, joint-stereo, 5.1 -->
						<bytes>84848483838</bytes><!-- length of file in bytes -->
						<location>
							<http>
								<url></url><!-- MUST ; should be tls -->
								<user></user><!-- COULD ; http-basic-header-auth -->
								<pass></pass><!-- COULD ; http-basic-header-auth -->
								<expiresdatetime>2011-06-10 20:24:00 GMT+00:00</expiresdatetime><!-- MUST ; until when this file is definitely available to be called -->
							</http><!-- http means that, this file is not delivered, but it can be pulled by the receiving parties ; integrity is assured by checksums -->
						</location>
						<checksums>
							<sha1></sha1><!-- SHOULD sha1-checksum of that file -->
							<md5></md5><!-- SHOULD sha1-checksum of that file -->
						</checksums><!-- MUST one checksum must be given; -->
					</file>
					<file>
						<type>prelistening</type><!-- MUST ; full|prelistening -->
						<filetype></filetype><!-- MUST ; FILEFORMAT/BITRATE[KBIT/s]/CODEC/CODECSETTINGS e.g. mp3/320/unknown/CBR -->
						<channels>stereo</channels>
						<bytes>84848483838</bytes><!-- length of file in bytes -->
						<location>
							<ftp>
								<server></server>
								<port></port>
								<path></path>
								<user></user><!-- COULD ; -->
								<pass></pass><!-- COULD ; -->
								<expiresdatetime>2011-06-10 20:24:00 GMT+00:00</expiresdatetime><!-- MUST ; until when this file is definitely available to be called -->
							</ftp><!-- http means that, this file is not delivered, but it can be pulled by the receiving parties ; integrity is assured by checksums -->
						</location>
						<checksums>
							<sha1></sha1><!-- SHOULD sha1-checksum of that file -->
							<md5></md5><!-- SHOULD sha1-checksum of that file -->
						</checksums><!-- MUST one checksum must be given; if encrypted file is referenced, those bytes/checksums are those of the encrypted file -->
						<decryptinfo>
							<cipher>AES/256/CTR</cipher><!-- MUST ; AES, RIJNDAEL, XOR, Arcfour, whatever - should be "convenient" -->
							<initvector>19191919199</initvector>
							<key></key><!-- MUST ; base64-encoded this key is encrypted by the public-key, therefore only the receiver (in possession of the private key) can decrypt this key and with that decrypted key decrypt the file -->
							<bytes></bytes>
							<checksums>
								<sha1></sha1><!-- SHOULD sha1-checksum of that file -->
								<md5></md5><!-- SHOULD sha1-checksum of that file -->
							</checksums>
						</decryptinfo>
					</file>
					<file>
						<type>full</type><!-- MUST ; full|prelistening -->
						<filetype>FLV/96/YUV/ajja</filetype><!-- MUST ; FILEFORMAT/BITRATE[KBIT/s]/CODEC/CODECSETTINGS e.g. mp3/320/unknown/CBR -->
						<bytes>84848483838</bytes><!-- length of file in bytes -->
						<location>
							<path>../ajajaj.flv</path><!-- relative-paths are relative to this xml -->
						</location>
						<checksums>
							<sha1></sha1><!-- SHOULD sha1-checksum of that file -->
							<md5></md5><!-- SHOULD sha1-checksum of that file -->
						</checksums><!-- MUST one checksum must be given; if encrypted file is referenced, those bytes/checksums are those of the encrypted file -->						
					</file>
				</files>
			</item>
		</items>
		
		<files>
			<file>
				<type>cover</type><!-- MUST ; cover / booklet -->
				<filetype></filetype><!-- MUST ; FILEFORMAT/BITRATE[KBIT/s]/CODEC/CODECSETTINGS e.g. mp3/320/unknown/CBR -->
				<bytes>84848483838</bytes><!-- length of file in bytes -->
				<dimension>
					<width>600</width>
					<height>600</height>
				</dimension><!-- MUST for images: width and height in pixels -->
				<location>
					<http>
						<url></url><!-- MUST ; should be tls -->
						<user></user><!-- COULD ; http-basic-header-auth -->
						<pass></pass><!-- COULD ; http-basic-header-auth -->
						<expiresdatetime>2011-06-10 20:24:00 GMT+00:00</expiresdatetime><!-- MUST ; until when this file is definitely available to be called -->
					</http><!-- http means that, this file is not delivered, but it can be pulled by the receiving parties ; integrity is assured by checksums -->
				</location>
				<checksums>
					<sha1></sha1><!-- SHOULD sha1-checksum of that file -->
					<md5></md5><!-- SHOULD sha1-checksum of that file -->
				</checksums><!-- MUST one checksum must be given; -->
			</file>
		</files><!-- mainly/only used for cover or pdf-booklet -->
	</bundle>
	
	
	<!--  could have X more bundles -->
	<!--
	<bundle>
		...
	</bundle>
	-->
	
	<!-- it is also possible to only send "an item" - aka track although this is quite inconvenient... -->
	<!--	
	<item>
		...
	</item>
	-->
	<!--  could have Z more items -->
</feed>

