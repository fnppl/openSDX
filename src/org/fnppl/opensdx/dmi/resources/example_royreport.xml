<?xml version="1.0" encoding="UTF-8"?>

<!--
/*
	* In case, this file is considered *documentation* rather than software, then this documentation-license applies.
 	* 
	* Copyright (C) 2010-2011 
  	* 						fine people e.V. <opensdx@fnppl.org> 
  	* 						Henning Thieß <ht@fnppl.org>
  	* 
  	* 						http://fnppl.org
 	*
 	* This file is part of openSDX.
    * Permission is granted to copy, distribute and/or modify this document 
    * under the terms of the GNU Free Documentation License, Version 1.3 
    * or any later version published by the Free Software Foundation; 
    * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. 
    * A copy of the license is included in the section entitled "GNU 
    * Free Documentation License" resp. in the file called "FDL.txt".
*/
--> 

<!-- 
/*
 * In case, this file is considered *software* rather than documentation, then this software-license applies.
 *
 * Copyright (C) 2010-2011 
 * 							fine people e.V. <opensdx@fnppl.org> 
 * 							Henning Thieß <ht@fnppl.org>
 * 
 * 							http://fnppl.org
 * 
 * 
 * This file is part of openSDX 
 * openSDX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * openSDX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * and GNU General Public License along with openSDX.
 * If not, see <http://www.gnu.org/licenses/>.
 *      
 */
-->


<!-- 
	This xml-document is to outline which fields/values are appreciated/needed in a complete report
	
	This xml is, especially, when it is *huge* intended to either be parsed by a SAX-parser or simply transformed to csv (NOT xls!)
	
	The transformation from xml to csv is quite simple and the csv seems to be the most common exchange-format for this, although xml is of course better structured and overall nicer

	the term "our" and "your" is always from the standpoint of the document-sending party.

	and yes, gzip-compression if this whole document seems totally usefull and inevitable...
	
	the signature of this document is to be given (at least) on the transferred document (so the receiver can check on that before degzipping tons of data)
	in the case of transferred document is gzipped, the sender should also sign the original document
	
 -->

<usagereport>
	<reportinfo>
		<reportid>kaakka</reportid><!-- MUST id is provided by sender; should be unique -->
		<reportname>Q5 2010 reports</reportname><!-- COULD trivial name -->
		<onlytest>true</onlytest><!-- MUST testmode true|false -->
		<creationdatetime>2010-10-01 00:00:00 GMT+00</creationdatetime><!-- MUST datetime of creation of this feed -->
		<covereddatetimefrom>2010-10-01 00:00:00 GMT+00</covereddatetimefrom><!-- MUST ; most probably the same as creationdate ; datetime when this feed may be come ACTIVE as earliest; mainly used for deferred update-feeds with an effective-date not *asap* -->
		<covereddatetimeto>2010-10-20 23:59:59 GMT+00</covereddatetimeto><!-- MUST ; most probably the same as creationdate ; datetime when this feed may be come ACTIVE as earliest; mainly used for deferred update-feeds with an effective-date not *asap* -->
		
		<reportedchannels>
			<channel1></channel1><!-- MUST ; could be *ALL* -->
			<channel2></channel2>
		</reportedchannels><!-- MUST - if POS is selling on different *channels* aka "subunits" - show them here -->
		
		<perrata>
			<overallin>EUR 88888888.99</overallin>
			<alloweddeductions>EUR 10.00</alloweddeductions>
		</perrata><!-- could if this is a per-rata-related report -->
		
		<overall>
			<overallroyaltydue>EUR 8888.99</overallroyaltydue>
			<overallusages>9191919</overallusages>
			<overallusageamount>12929299999</overallusageamount>
		</overall>
		
		<creator>
			<email>user@sendingparty.nät</email><!-- should be an email-address of the *user* on the sending side -->
			<userid>1919kdkdk12929</userid><!-- should be an unique id of the *user* on the sending side-->
		</creator><!-- creator is a mere info-field for the sending-party ; receiving party may totally feel free to ignore this -->

		<receiver>
			<type>ftp</type><!-- ftp|sftp|ftps|webdav|mail -->
			<servername></servername><!-- MUST provider should really give hostname instead of ip ; if hostname is given as ip, then put that one here -->
			<serveripv4></serveripv4><!-- MUST resolved servername ipv4 -->
			<serveripv6></serveripv6><!-- COULD resolved servername ipv6 -->
			<authtype>login</authtype><!-- MUST login|keyfile|token|other -->
			<authsha1>login</authsha1><!-- MUST case(login): SHA1(USERNAME:PASS) case(keyfile): SHA1(KEYFILE-data); case(token): SHA1(TOKEN-data) case(other): SHA1(relevant-data) -->

			<crypto>
				<relatedemail></relatedemail><!-- SHOULD -->
				<usedkeyid></usedkeyid><!-- COULD ; keyid on gpgkesyerver -->
				<usedpubkey></usedpubkey><!-- SHOULD ; ascii-armored / base64-form ; either this or keyid must be given -->
			</crypto><!-- COULD -->					
		</receiver>
		
		<sender>
			<contractpartnerid></contractpartnerid><!-- MUST your side of "ID" ; worst case: the sending-company's correct trade-register-name/number -->
			<ourcontractpartnerid></ourcontractpartnerid><!-- MUST our side of "ID" -->
			<email></email><!-- MUST esp. for signature-check ; could of course be a generic account e.g. deliveryteam@dsphouse.nät -->		
		</sender><!-- MUST -->
		<licensor>
			<contractpartnerid></contractpartnerid><!-- MUST your side of "ID" ; worst case: the license-giving-company's correct trade-register-name/number -->
			<ourcontractpartnerid></ourcontractpartnerid><!-- MUST our side of "ID" -->
			<email></email><!-- SHOULD good, but not neccessarily needed -->
		</licensor><!-- MUST could be identical to sender, but has to be given -->
	
	
		<actions>
			<oninitialreceive>
				<mailto>
					<receiver>lala@nowhere.nät, lala1@nowhere.nät</receiver><!-- MUST -->
					<subject></subject><!-- SHOULD this should be added to (an possibly empty) the emails subject ; SHOULD not be more than 200 7-byte-chars-->
					<text></text><!-- SHOULD this should be added to (an possibly empty) the emails text ; SHOULD not be more than 4048 7-byte-chars-->
				</mailto>
				<http>
					<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
					<type>GET</type><!-- GET|POST|HEAD ; most probably GET -->
					<addheader>
						<header>
							<name>gumpy</name>
							<value>RWJ</value>
						</header>
					</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
					<addparams>
						<param>
							<name>cmd</name>
							<value>ehlo</value>
						</param>
						<param>
							<name>jump</name>
							<value>neverfrombridgbe</value>
						</param>
					</addparams>
				</http>
				<http>
					<url>http://nowhere.nät/callme.php?w=initireceive&amp;k=true</url>
					<type>POST</type><!-- GET|POST|HEAD ; most probably GET ; in case of POST, there SHOULD no (GET)params included in url-call ; so, this example shows *bad* stuff -->
					<addheader>
						<header>
							<name>gumpy</name>
							<value>RWJ</value>
						</header>
					</addheader><!-- those headers are then added "X-" to the call - the url-caller may choose to ignore any header (especially those already used by himself) -->
					<addparams>
						<param>
							<name>cmd</name>
							<value>ehlo</value>
						</param>
						<param>
							<name>jump</name>
							<value>neverfrombridgbe</value>
						</param>
					</addparams>
				</http>
			</oninitialreceive><!-- SHOULD when the *machine* picks up this delivery (aka pulls it away from *inbox*) -->
			<onprocessstart></onprocessstart><!-- SHOULD when the *machine* start processing this feed -->
			<onprocessend></onprocessend><!-- SHOULD when *machine* has ended working on this -->
			<onfullsuccess>
				<fax>
					<number>+44 77 919191919</number>
					<to>
						<name>yeah company ltd.</name>
						<department>it crowd</department><!-- resolves to: dep. *department* -->
						<nameperson>jonathan jones</nameperson><!-- resolves to: Attn. *nameperson* -->
						<street>main street 1010</street>
						<postcode>112233</postcode>
						<country>DK</country><!-- ISO -->
						<additionaladdressinfo>Building 7</additionaladdressinfo>
					</to>
					<text></text><!-- text which MUST be on that fax -->
					<costscoveredby>
						<contractpartnerid></contractpartnerid><!-- MUST contractpartnerid on your side ; see above -->
						<ourcontractpartnerid></ourcontractpartnerid><!-- MUST contractpartnerid on our side ; see above -->					
						<maxcostscovered>EUR 0.77</maxcostscovered>
					</costscoveredby>
				</fax><!-- would be total awesome, if someone would provide even *non*-digital reports; of course this costs money ; receving party can decide to ignore this -->
				
				<letter>
					<registered>true</registered><!-- MUST true|false ; must be registered letter yes/no -->
					<to>
						<name>yeah company ltd.</name>
						<department>it crowd</department><!-- resolves to: dep. *department* -->
						<nameperson>jonathan jones</nameperson><!-- resolves to: Attn. *nameperson* -->
						<street>main street 1010</street>
						<postcode>112233</postcode>
						<country>DK</country><!-- ISO -->
						<additionaladdressinfo>Building 7</additionaladdressinfo>
					</to>
					<text></text><!-- text which MUST be on that letter -->
					<costscoveredby>
						<contractpartnerid></contractpartnerid><!-- MUST contractpartnerid on your side ; see above -->
						<ourcontractpartnerid></ourcontractpartnerid><!-- MUST contractpartnerid on our side ; see above -->					
						<maxcostscovered>EUR 0.77</maxcostscovered>
					</costscoveredby>
				</letter><!-- would be total awesome, if someone would provide even *non*-digital reports; of course this costs money ; receving party can decide to ignore this -->			
			</onfullsuccess><!-- SHOULD when *machine* thinks, everything was read and successfully process - without ANY error -->
			<onerror></onerror><!-- SHOULD when *machine* could process this, but some error, or total fail occured -->
		</actions><!-- SHOULD - hopefully the receiving party also respects this ; this would ease a lot in the chain... -->
	</reportinfo>
	
	
	<usages>
		<usage1>
			<usageid></usageid><!-- MUST ; at least: reportid+usage# -->
			<type>bundle</type><!-- bundle|item -->
			<usagetype>download</usagetype><!-- stream|upgrade|download|rent -->
			<channel>MAIN</channel><!-- MUST ; e.g. MAIN -->
			<name1></name1><!-- SHOULD a trivial name explaining this ; e.g. productname -->
			<name2></name2><!-- COULD a trivial name explaining this ; e.g. productversion -->
			<name3></name3><!-- COULD a trivial name explaining this ; e.g. labelname -->
			<name4></name4><!-- COULD a trivial name explaining this ; e.g. artistname -->
			<name5></name5><!-- COULD a trivial name explaining this ; e.g. trackname -->
			
			<playlength>400</playlength><!-- in s. -->
			<playedlength>20</playedlength><!-- in s. usually: playlength ; e.g.: where the customer stopped listening -->
			
			<usagedatetimefrom>2011-01-10 00:00:00 GMT+00</usagedatetimefrom>
			<usagedatetimeto>2011-01-11 23:59:59 GMT+00</usagedatetimeto>
			
			<ids>
				<grid></grid><!-- COULD grid -->
				<upc></upc><!-- SHOULD ean/upc -->
				<isrc></isrc><!-- SHOULD isrc - not applicable on bundle-level, but for  -->
				<contentauthid></contentauthid><!-- SHOULD content-authority-id - https://contentauthority.com  -->
				<labelordernum></labelordernum><!-- COULD -->
				<amzn></amzn><!-- COULD ; amazon-id-stuff -->
				<isbn></isbn><!-- COULD -->
				<finetunesid></finetunesid><!-- COULD -->
				<ourid></ourid><!-- COULD -->
				<yourid></yourid><!-- COULD -->
			</ids><!-- MUST -->
			
			<customer>
				<customerid></customerid><!-- unique on pos-side -->
				<country></country>
				<city></city>
				<postcode></postcode>
				<gender></gender>
				<age></age>
				<birthday></birthday>
				<email></email>
			</customer>
			
			<country></country><!-- MUST; this is/could be distinct from customers main-country -->
			<city></city><!-- SHOULD ; this is/could be distinct from customers main-city -->
			<postcode></postcode><!-- SHOULD ; this is/could be distinct from customers main-postcode -->
			
			<isp></isp><!-- SHOULD -->
			<ipv4></ipv4><!-- SHOULD -->
			<ipv6></ipv6><!-- SHOULD -->
			
			<paytype>VOUCHER</paytype><!-- MUST voucher, direct debit, creditcard(VISA,MASTER etc.), deposit, flat -->
			<paidmoney>EUR 0.04</paidmoney>
			<amount>1</amount><!-- if this is an aggregated usage (e.g. aggregated on one country/product), then this is the -->
			<royaltydue>EUR 0.03</royaltydue><!-- overall ; already multiplied by amount though -->
			<ratapermille>0.9000001</ratapermille><!-- if this is a per-rata deal: per mille of gross of this usage -->
		</usage1>
		<!-- and a lot more usages... -->
	</usages>
	
	
	<returns><!-- returns MUST be stated separately  -->
		<return1>
			<returnid></returnid><!-- MUST ; at least: reportid+returnid# -->
			<usageid></usageid><!-- MUST ; at least: reportid+usage# -->
			<type>bundle</type><!-- bundle|item -->
			<usagetype>download</usagetype><!-- stream|upgrade|download|rent -->
			<channel>MAIN</channel><!-- MUST ; e.g. MAIN -->
			<name1></name1><!-- SHOULD a trivial name explaining this ; e.g. productname -->
			<name2></name2><!-- COULD a trivial name explaining this ; e.g. productversion -->
			<name3></name3><!-- COULD a trivial name explaining this ; e.g. labelname -->
			<name4></name4><!-- COULD a trivial name explaining this ; e.g. artistname -->
			<name5></name5><!-- COULD a trivial name explaining this ; e.g. trackname -->
			
			<playlength>400</playlength><!-- in s. -->
			<playedlength>20</playedlength><!-- in s. usually: playlength ; e.g.: where the customer stopped listening -->
			
			<returndatetimefrom>2011-01-10 00:00:00 GMT+00</returndatetimefrom>
			<returndatetimeto>2011-01-11 23:59:59 GMT+00</returndatetimeto>
			
			<usagedatetimefrom>2011-01-10 00:00:00 GMT+00</usagedatetimefrom>
			<usagedatetimeto>2011-01-11 23:59:59 GMT+00</usagedatetimeto>
			
			<ids>
				<grid></grid><!-- COULD grid -->
				<upc></upc><!-- SHOULD ean/upc -->
				<isrc></isrc><!-- SHOULD isrc - not applicable on bundle-level, but for  -->
				<contentauthid></contentauthid><!-- SHOULD content-authority-id - https://contentauthority.com  -->
				<labelordernum></labelordernum><!-- COULD -->
				<amzn></amzn><!-- COULD ; amazon-id-stuff -->
				<isbn></isbn><!-- COULD -->
				<finetunesid></finetunesid><!-- COULD -->
				<ourid></ourid><!-- COULD -->
				<yourid></yourid><!-- COULD -->
			</ids><!-- MUST -->
			
			<customer>
				<customerid></customerid><!-- unique on pos-side -->
				<country></country>
				<city></city>
				<postcode></postcode>
				<gender></gender>
				<age></age>
				<birthday></birthday>
				<email></email>
			</customer>
			
			<country></country><!-- MUST; this is/could be distinct from customers main-country -->
			<city></city><!-- SHOULD ; this is/could be distinct from customers main-city -->
			<postcode></postcode><!-- SHOULD ; this is/could be distinct from customers main-postcode -->
			
			<isp></isp><!-- SHOULD -->
			<ipv4></ipv4><!-- SHOULD -->
			<ipv6></ipv6><!-- SHOULD -->
			
			<paytype>VOUCHER</paytype><!-- MUST voucher, direct debit, creditcard(VISA,MASTER etc.), deposit, flat -->
			<paidmoney>EUR 0.04</paidmoney>
			<amount>1</amount><!-- if this is an aggregated usage (e.g. aggregated on one country/product), then this is the -->
			<royaltydue>EUR 0.03</royaltydue><!-- overall ; already multiplied by amount though -->
			<ratapermille>0.9000001</ratapermille><!-- if this is a per-rata deal: per mille of gross of this usage -->
		</return1>
		<!-- and hopefully no more returns... -->
	</returns>
</usagereport>



 