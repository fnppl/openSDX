<?xml version="1.0" encoding="UTF-8"?>

<!-- 

/*
 * Copyright (C) 2010-2011 
 * 							fine people e.V. <opensdx@fnppl.org> 
 * 							Henning Thieß <ht@fnppl.org>
 * 
 * 							http://fnppl.org
*/

/*
 * Software license
 *
 * As far as this file or parts of this file is/are software, rather than documentation, this software-license applies / shall be applied.
 *  
 * This file is part of openSDX
 * openSDX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * openSDX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * and GNU General Public License along with openSDX.
 * If not, see <http://www.gnu.org/licenses/>.
 *      
 */

/*
 * Documentation license
 * 
 * As far as this file or parts of this file is/are documentation, rather than software, this documentation-license applies / shall be applied.
 * 
 * This file is part of openSDX.
 * Permission is granted to copy, distribute and/or modify this document 
 * under the terms of the GNU Free Documentation License, Version 1.3 
 * or any later version published by the Free Software Foundation; 
 * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. 
 * A copy of the license is included in the section entitled "GNU 
 * Free Documentation License" resp. in the file called "FDL.txt".
 * 
 */

 -->

<keystore>
	<keys>
		<keypair>
			<!--  example of asymmetric key pair -->
			<identities>
				<identity>
					<email>jaja@kakak.nät</email><!-- MUST -->
					<mnemonic></mnemonic><!-- SHOULD ; shorthandle for this identities-purpose "residency" or "work" or whatever -->
					<phone>+44 99 00202021</phone><!-- COULD -->
					<country></country><!-- COULD -->
					<region></region><!-- COULD -->
					<postcode></postcode><!-- COULD -->		
					<company></company><!-- COULD -->
					<unit></unit><!-- COULD -->
					<subunit></subunit><!-- COULD -->
					
					<function></function><!-- COULD ; function of that person -->
					<surname></surname><!-- COULD -->
					<middlename></middlename><!-- COULD -->
					<name></name><!-- COULD -->
					
					<note></note><!-- COULD -->
					<sha1>A7:DC:99:4D:64:7D:57:95:2A:4F:0F:D3:52:4E:29:6F:02:32:10:5A</sha1><!-- sha1 as hex of concat of all above fields (also empty ones) -->
					<!-- please be aware of the exact order of these fields... -->
					
					<!-- this data is set on client-side -->
					<datapath>
						<step1>
							<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step1>
						<step2>
							<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step2>
					</datapath>
				</identity>
				<identity>
					<email>jaja22@kakak.nät</email><!-- MUST -->
					<mnemonic></mnemonic><!-- SHOULD ; shorthandle for this identities-purpose "residency" or "work" or whatever -->
					<phone>+44 99 0020202221</phone><!-- COULD -->
					<country></country><!-- COULD -->
					<region></region><!-- COULD -->
					<postcode></postcode><!-- COULD -->		
					<company></company><!-- COULD -->
					<unit></unit><!-- COULD -->
					<subunit></subunit><!-- COULD -->
					
					<function></function><!-- COULD ; function of that person -->
					<surname></surname><!-- COULD -->
					<middlename></middlename><!-- COULD -->
					<name></name><!-- COULD -->
					
					<note></note><!-- COULD -->
					<sha1>37:E9:94:3D:CD:3F:A7:EC:48:C3:71:53:1A:A9:8C:D7:14:53:34:6F</sha1><!-- sha1 as hex of concat of all above fields -->
					<!-- please be aware of the exact order of these fields... -->
					
					<!-- this data is set on client-side -->
					<datapath>
						<step1>
							<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step1>
						<step2>
							<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step2>
					</datapath>
				</identity>
			</identities><!--  identities should only occur on MASTER-key -->
			
			<sha1fingerprint>BEEE542006AF8301096BF0305AB4632E9982AA94</sha1fingerprint><!-- sha1-fingerprint in hex without leading for modulus @mainbase -->
			<authoritativekeyserver>keys.fnppl.org</authoritativekeyserver><!-- which keyserver is the (most) authoritative? ; could be "local" -->
			
			<!-- 
			
				keyid is the combined sha1fingerprint of modulus +"@"+authoritativekeyserverid
				e.g. 8C206A1A87599F532CE68675536f0B1546900D7A@keys.fnppl.org
			-->
			
			<!-- this data is set on client-side -->
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
			
			<usage>ONLYSIGN</usage><!-- ONLYSIGN|CRYPT|BOTH --><!-- MASTER-keys/REVOKE-keys MUST only have SIGN-capabilities... -->
			<level>MASTER</level><!-- MASTER|REVOKE|SUB -->
			
			<parentkeyid></parentkeyid><!-- COULD ; should be missing for MASTER-key sha1-fingerprint in hex with leading 0x for modulus of key which this one is child of -->
			
			<algo>RSA</algo> <!-- RSA ; others not implemented yet -->
			<bits>3072</bits>
			<modulusmodulus> <!-- as hex-string with or without leading 0x ; only for RSA?! -->
			
			<pubkey>
				<exponent>0x010001</exponent><!-- as hex-string with leading 0x -->				
			</pubkey><!-- theoretically pubkey could also be missing, but somewhat useless then... -->
			
			<privkey>
				<exponent>
					<locked>
						<mantraname>yessir, gimme da pass! (password)</mantraname>
						<algo>AES@256</algo>
						<initvector>00112233445566778899AABBCCDDEEFF</initvector><!-- as hex with or without leading 0x -->
						<padding>CBC/PKCS#5</padding>
						<bytes>9B26C63CC5F766B5A8633BB0A7BD2E0A5806563CB4109B9375340F0EC694A609B26928E5D491822A37EB8113BA240EFAF54FCD5673F05574B83D5DB6B6B12DA9F3A2576784A74F60B5AC9C95E636495E74B4C1412BBABC3A23861BF56A079A6B34D77535AB39FBAADA90EB15FF9470E9E859B5E27C0D4861A10EB8E05B3819D1B2D5C17B6781E5F3BEAB5BCBCC1B495298D4930FE4B0AB78DC1A130D27F1657206131C084686C86580B663A483888A9F5A46DDB66F6D6496079B9F90CF7FF5BD0390E344E9EA1F5F76B7D8E6AE0359E4B86D89377CA4A3E689D170AD27A662A6E79914648337FA27C7CA7CDDF580B54CD28A8EE9E49C26414E46857EE6BA1B3F85D0A2D61E11F176D8992F14C2D59C1E5B0CA555527B8C677D43E2D5A5BA556B9486F977B256FC9A8E3A5E06A4CE5306F881229E0C4FB0CD8BEBA3248412BC7B10EECCF2E5E9CB63EE4B82EB4D6CDD70AB58B2EF90FF911B4EB29332BA077818F61DF872BF428BD58D056D6B265B47F707F834D88DBEF0C8D0604DE8D419CA75D1D25A9272B5E68730AB1D06B668787E</bytes><!-- as hex-string with or without leading 0x -->
					</locked>
				</exponent>
			</privkey><!-- privkey may be missing -->
			
			<gpgkeyserverid></gpgkeyserverid><!-- id on gpg-keyserver - we are not allone... -->
		</keypair>
		<keypair>
			<!--  example of public key -->
			<sha1fingerprint>05E86B55674F1DA6399026226DE74F718109FAC7</sha1fingerprint><!-- sha1-fingerprint in hex with leading 0x for modulus -->
			<authoritativekeyserver>keys.fnppl.org</authoritativekeyserver><!-- which keyserver is the (most) authoritative? ; could be "local" -->
			
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
			
			<usage>ONLYSIGN</usage><!-- ONLYSIGN|ONLYCRYPT|BOTH -->
			<level>SUB</level><!-- MASTER|REVOKE|SUB -->
			
			<parentkeyid>BEEE542006AF8301096BF0305AB4632E9982AA94@keys.fnppl.org</parentkeyid><!-- COULD ; should be missing for MASTER-key sha1-fingerprint in hex without leading +"@"+ authoritative keyserver for modulus of key which this one is child of -->
			
			<algo>RSA</algo><!-- RSA ; others not implemented yet -->
			<bits>3072</bits>
			<modulusmodulus><!-- as hex-string with leading 0x ; only for RSA?! -->
			
			<pubkey>
				<exponent>0x010001</exponent> <!-- as hex-string with leading 0x -->				
			</pubkey>
			<!-- corresponding private key: 70D059FA840E7360AC8EF948623502E3F4D821F4BCD30A5367B761ECF7AC2EA64035FB7667F0FEE1C6BDA3723720EB3640842465E569D14CBE2FB2D5A9EA1A391A1F46EED93FEADB249F067E3C89D127DC1E6ECE71A5ED36E1CD5388D51D24671CD92946A0C037048583218953E40ABCE00DB066ED7FF60B5C2F353A344F3E293E55D693441A9E031BBB27B371C18526597C01B32ABA34C90EA0499982E2B7A7A7F70E68832EDC74E8A0D79545EDF94CD93014CE48855E0C6AC7E2A395A7A7643C51AD20C2D24E515A1569CD27F36D04E77059DBE079C4740E578BDDA2B6D989FD904925325A181B9A80DFE534C6A92DD3AA3C6363F400AF3571E70DBC63DE4EF4F30F7DC7112110AF96058B2F8E60D7730CD62C6056E87AA637BAAC711EBB562747855488A244DEC6BC95958B3A7A1FEF2BEBB6ACDD425DF9255BB56AC62BC090F96B71902653D4E4550E817C60D20240055C96704DE3164A4F4158DAEC1EE42DD9E3966BA1FCDFCA67F9F7AB32CEA7D6653B9530D0BB8D1527DB222D4B9139  -->
		</keypair>
		
		
		<sha1localproof></sha1localproof><!-- MUST sha1-fingerprint in hex with or without leading 0x for modulus of *all* data above -->
		
		<signoff>
			<keyid>kjakdjadkjajd@keys.fnppl.org</keyid>
			<pubkey>
				<algo>RSA</algo><!-- RSA ; others not implemented yet -->
				<bits>3072</bits><!-- well, yes, count yourself, but nice to *see* it -->
				<modulus></modulus><!-- as hex-string with or without leading 0x ; only for RSA?! -->
				<exponent></exponent><!-- as hex-string with or without leading 0x -->
			</pubkey><!-- given, but should be verified from server/yourself... -->
			<sha1>asdasd</sha1><!-- basically the sha1 of the sha1localproof. as hex-string with ":" or " " separation... looks nicer... -->
			<signaturebytes>asdasd</signaturebytes><!-- as hex-string with ":" or " " separation and line-breaks... looks nicer... -->
		</signoff><!-- MUST ; a signature on the sha1localproof-bytes -->
	</keys>
	
	
	<keylog>
		<action>
			<date>2011-01-01 00:00:00 GMT+00:00</date>
			<ipv4>919191</ipv4> <!-- lets assume, those actions are always made via net -->
			<ipv6>91921929</ipv6> <!-- lets assume, those actions are always made via net -->

			<from>
				<keyid>kakaka@llalal.nät</keyid><!-- MUST -->
				<sha1fingerprint></sha1fingerprint><!-- MUST sha1-fingerprint in hex with leading 0x for modulus of that signing-entity -->
			</from> <!-- self-approval also works this way... -->
			<to>
				<keyid>kakaka2@llalal.nät</keyid><!-- MUST -->								
				<sha1fingerprint></sha1fingerprint><!-- MUST sha1-fingerprint in hex with leading 0x for modulus of that target-entity -->
			</to> <!-- self-approval also works this way... -->
			
			<approval>
				<of>
					<identity>
						<email>akakak@lalal</email><!-- COULD ; list only those fields, that are approved/disapproved/revoked -->
						<function></function><!-- COULD ; list only those fields, that are approved/disapproved/revoked -->
						<sha1></sha1><!-- sha1 as hex of concat of all above fields (also empty ones) -->
					</identity><!-- please be aware of the exact order of these fields... -->
				</of>
			</approval><!-- approval/disapproval/revocation -->
			
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
		</action>
		
		<sha1localproof></sha1localproof><!-- MUST sha1-fingerprint in hex with or without leading 0x for above data -->
		
		<signoff>
			<keyid>kjakdjadkjajd@keys.fnppl.org</keyid>
			<pubkey>
				<algo>RSA</algo><!-- RSA ; others not implemented yet -->
				<bits>3072</bits><!-- well, yes, count yourself, but nice to *see* it -->
				<modulus></modulus><!-- as hex-string with or without leading 0x ; only for RSA?! -->
				<exponent></exponent><!-- as hex-string with or without leading 0x -->
			</pubkey><!-- given, but should be verified from server/yourself... -->
			<sha1>asdasd</sha1><!-- basically the sha1 of the sha1localproof. as hex-string with ":" or " " separation... looks nicer... -->
			<signaturebytes>asdasd</signaturebytes><!-- as hex-string with ":" or " " separation and line-breaks... looks nicer... -->
		</signoff><!-- MUST ; a signature on the sha1localproof-bytes -->		
	</keylog>
</keystore>

