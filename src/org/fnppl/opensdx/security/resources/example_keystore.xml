<?xml version="1.0" encoding="UTF-8"?>

<!--
/*
	* In case, this file is considered *documentation* rather than software, then this documentation-license applies.
 	* 
	* Copyright (C) 2010-2011 
  	* 						fine people e.V. <opensdx@fnppl.org> 
  	* 						Henning Thieß <ht@fnppl.org>
  	* 
  	* 						http://fnppl.org
 	*
 	* This file is part of openSDX.
    * Permission is granted to copy, distribute and/or modify this document 
    * under the terms of the GNU Free Documentation License, Version 1.3 
    * or any later version published by the Free Software Foundation; 
    * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. 
    * A copy of the license is included in the section entitled "GNU 
    * Free Documentation License" resp. in the file called "FDL.txt".
*/
--> 

<!-- 
/*
 * In case, this file is considered *software* rather than documentation, then this software-license applies.
 *
 * Copyright (C) 2010-2011 
 * 							fine people e.V. <opensdx@fnppl.org> 
 * 							Henning Thieß <ht@fnppl.org>
 * 
 * 							http://fnppl.org
 * 
 * 
 * This file is part of openSDX 
 * openSDX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * openSDX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * and GNU General Public License along with openSDX.
 * If not, see <http://www.gnu.org/licenses/>.
 *      
 */
-->

<keystore>
	<keys>
		<keypair>
			<identities>
				<identity>
					<email>jaja@kakak.nät</email><!-- MUST -->
					<mnemonic></mnemonic><!-- SHOULD ; shorthandle for this identities-purpose "residency" or "work" or whatever -->
					<phone>+44 99 00202021</phone><!-- COULD -->
					<country></country><!-- COULD -->
					<region></region><!-- COULD -->
					<postcode></postcode><!-- COULD -->		
					<company></company><!-- COULD -->
					<unit></unit><!-- COULD -->
					<subunit></subunit><!-- COULD -->
					
					<function></function><!-- COULD ; function of that person -->
					<surname></surname><!-- COULD -->
					<middlename></middlename><!-- COULD -->
					<name></name><!-- COULD -->
					
					<note></note><!-- COULD -->
					<sha1></sha1><!-- sha1 as hex of concat of all above fields (also empty ones) -->
					<!-- please be aware of the exact order of these fields... -->
					
					<!-- this data is set on client-side -->
					<datapath>
						<step1>
							<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step1>
						<step2>
							<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step2>
					</datapath>
				</identity>
				<identity>
					<email>jaja22@kakak.nät</email><!-- MUST -->
					<mnemonic></mnemonic><!-- SHOULD ; shorthandle for this identities-purpose "residency" or "work" or whatever -->
					<phone>+44 99 0020202221</phone><!-- COULD -->
					<country></country><!-- COULD -->
					<region></region><!-- COULD -->
					<postcode></postcode><!-- COULD -->		
					<company></company><!-- COULD -->
					<unit></unit><!-- COULD -->
					<subunit></subunit><!-- COULD -->
					
					<function></function><!-- COULD ; function of that person -->
					<surname></surname><!-- COULD -->
					<middlename></middlename><!-- COULD -->
					<name></name><!-- COULD -->
					
					<note></note><!-- COULD -->
					<sha1></sha1><!-- sha1 as hex of concat of all above fields -->
					<!-- please be aware of the exact order of these fields... -->
					
					<!-- this data is set on client-side -->
					<datapath>
						<step1>
							<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step1>
						<step2>
							<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
							<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
						</step2>
					</datapath>
				</identity>
			</identities><!--  identities should only occur on MASTER-key -->
			
			<sha1fingerprint>292992</sha1fingerprint><!-- sha1-fingerprint in hex without leading for modulus @mainbase -->
			<authoritativekeyserver>keys.fnppl.org</authoritativekeyserver><!-- which keyserver is the (most) authoritative? ; could be "local" -->
			
			<!-- 
				keyid is the combined sha1fingerprint of modulus +"@"+authoritativekeyserverid
				e.g. 8C206A1A87599F532CE68675536f0B1546900D7A@keys.fnppl.org
			-->
			
			<!-- this data is set on client-side -->
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
			
			<usage>ONLYSIGN</usage><!-- ONLYSIGN|CRYPT|BOTH --><!-- MASTER-keys/REVOKE-keys MUST only have SIGN-capabilities... -->
			<level>MASTER</level><!-- MASTER|REVOKE|SUB -->
			
			<parentkeyid>292992assd</parentkeyid><!-- COULD ; should be missing for MASTER-key sha1-fingerprint in hex with leading 0x for modulus of key which this one is child of -->
			
			<algo>RSA</algo> <!-- RSA ; others not implemented yet -->
			<bits>3072</bits>
			<modulus></modulus> <!-- as hex-string with or without leading 0x ; only for RSA?! -->
			
			<pubkey>
				<exponent></exponent><!-- as hex-string with leading 0x -->				
			</pubkey><!-- theoretically pubkey could also be missing, but somewhat useless then... -->
			
			<privkey>
				<exponent>
					<locked>
						<mantraname>yessir, gimme da pass!</mantraname>
						<algo>AES@256</algo>
						<initvector>9191919919</initvector><!-- as hex with or without leading 0x -->
						<padding>CBC/PKCS#5</padding>
						<bytes></bytes><!-- as hex-string with or without leading 0x -->
					</locked>
				</exponent>
			</privkey><!-- privkey may be missing -->
			
			<gpgkeyserverid></gpgkeyserverid><!-- id on gpg-keyserver - we are not allone... -->
		</keypair>
		<keypair>
			<sha1fingerprint>292992asd</sha1fingerprint><!-- sha1-fingerprint in hex with leading 0x for modulus -->
			
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
			
			<usage>ONLYCRYPT</usage><!-- ONLYSIGN|ONLYCRYPT|BOTH -->
			<level>SUB</level><!-- MASTER|REVOKE|SUB -->
			
			<parentkeyid>292992@keys.fnppl.org</parentkeyid><!-- COULD ; should be missing for MASTER-key sha1-fingerprint in hex without leading +"@"+ authoritative keyserver for modulus of key which this one is child of -->
			
			<algo>RSA</algo><!-- RSA ; others not implemented yet -->
			<bits>3072</bits>
			<modulus></modulus><!-- as hex-string with leading 0x ; only for RSA?! -->
			
			<pubkey>
				<exponent></exponent> <!-- as hex-string with leading 0x -->				
			</pubkey> <!-- theoretically pubkey could also be missing, but somewhat useless then... -->
			
			<privkey>
				<exponent>
					<locked>
						<mantraname>yessir, gimme da pass!</mantraname>
						<algo>AES@256</algo>
						<initvector>0x9191919919</initvector>
						<padding>CBC/PKCS#5</padding>
						<bytes></bytes> <!-- as hex-string with or without leading 0x -->
					</locked>
				</exponent> <!-- as hex-string with leading 0x -->				
			</privkey> <!-- privkey may be missing -->
		</keypair>
		
		
		<sha1localproof></sha1localproof><!-- MUST sha1-fingerprint in hex with or without leading 0x for modulus of *all* data above -->
		
		<signoff>
			<keyid>kjakdjadkjajd@keys.fnppl.org</keyid>
			<pubkey>
				<algo>RSA</algo><!-- RSA ; others not implemented yet -->
				<bits>3072</bits><!-- well, yes, count yourself, but nice to *see* it -->
				<modulus></modulus><!-- as hex-string with or without leading 0x ; only for RSA?! -->
				<exponent></exponent><!-- as hex-string with or without leading 0x -->
			</pubkey><!-- given, but should be verified from server/yourself... -->
			<sha1>asdasd</sha1><!-- basically the sha1 of the sha1localproof. as hex-string with ":" or " " separation... looks nicer... -->
			<signaturebytes>asdasd</signaturebytes><!-- as hex-string with ":" or " " separation and line-breaks... looks nicer... -->
		</signoff><!-- MUST ; a signature on the sha1localproof-bytes -->
	</keys>
	
	
	<keylog>
		<action>
			<date>2011-01-01 00:00:00 GMT+00:00</date>
			<ipv4>919191</ipv4> <!-- lets assume, those actions are always made via net -->
			<ipv6>91921929</ipv6> <!-- lets assume, those actions are always made via net -->

			<from>
				<keyid>kakaka@llalal.nät</keyid><!-- MUST -->
				<sha1fingerprint></sha1fingerprint><!-- MUST sha1-fingerprint in hex with leading 0x for modulus of that signing-entity -->
			</from> <!-- self-approval also works this way... -->
			<to>
				<keyid>kakaka2@llalal.nät</keyid><!-- MUST -->								
				<sha1fingerprint></sha1fingerprint><!-- MUST sha1-fingerprint in hex with leading 0x for modulus of that target-entity -->
			</to> <!-- self-approval also works this way... -->
			
			<approval>
				<of>
					<identity>
						<email>akakak@lalal</email><!-- COULD ; list only those fields, that are approved/disapproved/revoked -->
						<function></function><!-- COULD ; list only those fields, that are approved/disapproved/revoked -->
						<sha1></sha1><!-- sha1 as hex of concat of all above fields (also empty ones) -->
					</identity><!-- please be aware of the exact order of these fields... -->
				</of>
			</approval><!-- approval/disapproval/revocation -->
			
			<datapath>
				<step1>
					<datasource>keys.fnppl.org</datasource><!-- keyserver or local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step1>
				<step2>
					<datasource>keys.fnppl.org</datasource><!-- step2 only valid when step1 != local -->
					<datainsertdatetime>2011-02-21 00:00:00 GMT+00:00</datainsertdatetime>
				</step2>
			</datapath>
		</action>
		
		<sha1localproof></sha1localproof><!-- MUST sha1-fingerprint in hex with or without leading 0x for above data -->
		
		<signoff>
			<keyid>kjakdjadkjajd@keys.fnppl.org</keyid>
			<pubkey>
				<algo>RSA</algo><!-- RSA ; others not implemented yet -->
				<bits>3072</bits><!-- well, yes, count yourself, but nice to *see* it -->
				<modulus></modulus><!-- as hex-string with or without leading 0x ; only for RSA?! -->
				<exponent></exponent><!-- as hex-string with or without leading 0x -->
			</pubkey><!-- given, but should be verified from server/yourself... -->
			<sha1>asdasd</sha1><!-- basically the sha1 of the sha1localproof. as hex-string with ":" or " " separation... looks nicer... -->
			<signaturebytes>asdasd</signaturebytes><!-- as hex-string with ":" or " " separation and line-breaks... looks nicer... -->
		</signoff><!-- MUST ; a signature on the sha1localproof-bytes -->		
	</keylog>
</keystore>

